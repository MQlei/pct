"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; // https://nuxt.com/docs/api/configuration/nuxt-config
var _default = exports.default =
defineNuxtConfig({
  compatibilityDate: '2025-07-15',
  devtools: { enabled: true },

  ssr: true, // 开启 SSR
  target: 'static', // 可省略，Nuxt3 默认是 'server'，但在 generate 会被 override
  // 网站部署路径，如果部署在子路径下要配置此项
  app: {
    // 如果你的网站部署在 https://example.com/my-site/ ,那这里就写 '/my-site/'，否则默认 '/'
    baseURL: '/'
  },
  server: {
    host: '0.0.0.0', // 默认为 localhost
    port: 3000 // 默认为 3000
  },
  // 构建输出目录（默认是 .output/，但 generate 会用 dist/）
  nitro: {
    preset: 'static',

    devProxy: {
      // 开发环境代理配置
      '/api-proxy': {
        target: 'http://21xd945184.zicp.fun', // 目标IP
        changeOrigin: true,
        rewrite: (path) => path.replace(/^\/api-proxy/, '') // 移除代理前缀
      }
    },
    // 生产环境代理（如果需要）
    routeRules: {
      '/api-proxy/': {
        proxy: 'http://21xd945184.zicp.fun'
      }
    }
  },

  // runtimeConfig: {
  //   public: {
  //     baseURL: process.env.NUXT_PUBLIC_API_BASE,
  //   },
  // },
  modules: [
  '@nuxtjs/tailwindcss',
  '@element-plus/nuxt',
  '@pinia/nuxt',
  '@pinia-plugin-persistedstate/nuxt'],

  // proxy: {
  //   // 将/api-proxy开头的请求转发到目标服务器
  //   '/api-proxy': {
  //     target: 'http://125.122.26.157:8081', // 目标IP和端口
  //     pathRewrite: { '^/api-proxy': '' }, // 移除路径中的/api-proxy前缀
  //     changeOrigin: true // 解决跨域问题（关键）
  //   }
  // },

  vite: { // 启用 Vite 插件
    resolve: {
      alias: {
        'element-plus': 'element-plus'
      }
    },
    css: {
      preprocessorMaxWorkers: true,
      preprocessorOptions: {
        scss: {
          additionalData: `@use "~/assets/css/element-var.scss" as *;` // 全局注入变量
        }
      }
    }
  },

  // CSS 配置
  css: [
  'swiper/css',
  'swiper/css/navigation',
  'swiper/css/pagination',
  '~/assets/css/tailwindcss.css',
  '~/assets/css/element-index.scss'],


  tailwindcss: {
    configPath: '~/tailwind.config.js'
  },


  // Element Plus 配置
  elementPlus: {
    importStyle: 'scss', // 确保 Element Plus 使用 Sass
    useSource: true // 可选：启用源码优化（可 Tree-shake）
  },

  // 构建配置
  build: {
    transpile: ['swiper']
  }
}); /* v9-1283adfe8d9c973a */
